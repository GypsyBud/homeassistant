- alias: HASS Update Available Notification
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.ha_online_version
  condition:
    - condition: template
      value_template: '{{states("sensor.ha_online_version") != states("sensor.current_version") }}'
  action:
    - service: notify.gmaillolo
      data_template:
        message: 'There is an update to Home-Assistant: {{states("sensor.ha_online_version")}} (https://hub.docker.com/r/homeassistant/home-assistant/builds/)'

- alias: HASS Start Sound
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
  - service: media_player.play_media
    data:
      entity_id: media_player.google_home_minis
      media_content_id: 'http://192.168.0.24/audio/Click.mp3'
      media_content_type: 'audio/mp4'

- alias: HASS Stop Motion Detection
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
  - service: switch.turn_off
    entity_id: switch.dafang_living_room_status
  # - service: switch.turn_on
    # entity_id: switch.dafang_living_room_yellow_led
  - service: switch.turn_off
    entity_id: switch.dafang_kitchen_status
  # - service: switch.turn_on
    # entity_id: switch.dafang_kitchen_yellow_led

- alias: HASS Nightly Restart
  initial_state: true
  trigger:
    platform: time_pattern
    hours: 2
    minutes: 0
    seconds: 0
  action:
  - service: shell_command.reboot_dafang_kitchen
  - service: shell_command.reboot_dafang_livingroom

- alias: 'SSL expiry notification'
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states("sensor.ssl_cert_expiry") | int < 21 }}'
  action:
    service: notify.gmaillolo
    data:
      message: 'Warning - SSL certificate expires in <21 days and has not been automatically renewed'



- alias: HASS Start Xmas Setup
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
    # - service: group.set_visibility
      # entity_id: group.xmas
      # data:
        # visible: False
    - condition: template
      value_template: '{{ (as_timestamp(now()) -(state_attr("input_datetime.xmas_start", "timestamp") | default(0)) | int > 0)}}'
    - condition: template
      value_template: '{{ ((state_attr("input_datetime.xmas_end", "timestamp") | default(0)) | int ) - as_timestamp(now()) >0 }}'
    # - service: group.set_visibility
      # entity_id: group.xmas
      # data_template:
        # visible: >
          # {% if is_state("input_boolean.xmas", "on") %}True
          # {% else %}False
          # {% endif %}
    - condition: state
      entity_id: input_boolean.xmas
      state: 'off'
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.silent
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.xmas
    - delay: 00:00:05
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.silent


- alias: "Failed Login Attempt Notification"
  initial_state: true
  trigger:
    - platform: state
      entity_id: persistent_notification.httplogin
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != off }}"
  action:
    - service: notify.gmaillolo
      data_template:
        message: >
          Login Attempt Failed\n
          http://www.ip-tracker.org/locator/ip-lookup.php?ip={{ state_attr("persistent_notification.httplogin", "message").split ("from ") [1]}}


- alias: hasspodcast Update Available
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.ha_podcast_track
  action:
    - service: notify.gmaillolo
      data_template:
        message: >
          There is a new hass podcast: {{ states("sensor.ha_podcast_track")}}

