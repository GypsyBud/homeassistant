- alias: 'Alarm - Trigger while armed away'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.pir_conservatory
        - binary_sensor.pir_kitchen
        - binary_sensor.pir_living_room_front
        - binary_sensor.pir_living_room_back
        - binary_sensor.conservatory_skylight_left
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.alarm
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm


- alias: 'Alarm - notify when triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.alarm
      to: 'triggered'
  action:
    # - service: notify.gmaildiv
      # data_template:
        # message: >
          # "ALARM! The alarm has been triggered"\n
          # ({{ trigger.entity_id | replace("binary_sensor.","") | replace("_"," ") |capitalize }})
    - service: notify.gmaillolo
      data_template:
        message: >
          ALARM! The alarm has been triggered (
          {% for state in states.binary_sensor -%}
          {% if state.entity_id.split("binary_sensor.")[1].split("_")[0] == "pir"  and state.state =="on" %}{{ state.entity_id.split("binary_sensor.")[1].split("pir_")[1]}},
          {% elif state.entity_id.split("binary_sensor.")[1].split("_")[0] == "conservatory"  and state.state =="on" %}Conservatory Skylight
          {% endif %}
          {%- endfor %})
    - service: notify.ios_lolos_iphone
      data_template:
        message: >
          ALARM! The alarm has been triggered (
          {% for state in states.binary_sensor -%}
          {% if state.entity_id.split("binary_sensor.")[1].split("_")[0] == "pir"  and state.state =="on" %}{{ state.entity_id.split("binary_sensor.")[1].split("pir_")[1]}},
          {% elif state.entity_id.split("binary_sensor.")[1].split("_")[0] == "conservatory"  and state.state =="on" %}Conservatory Skylight
          {% endif %}
          {%- endfor %})
        data:
          push:
            badge: '{{states.counter.iosbadgecount.state}}'
            category: "alarm"
          action_data:
            entity_id: '{{trigger.entity_id}}'


- alias: 'Alarm - Stop arming when windows left open'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.alarm
      to: 'pending'
      from: 'disarmed'
  condition:
    - condition: state
      entity_id: binary_sensor.conservatory_skylight_left
      state: 'on'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alarm
      data:
        code: !secret alarm_code
    - service: tts.google_say
      data_template:
        entity_id: media_player.google_home_minis
        message: |
          Please note, one or more windows are left open. Disarming alarm...
