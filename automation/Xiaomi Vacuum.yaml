- alias: Start Vacuuming
  initial_state: false
  trigger:
    - platform: time_pattern
      minutes: '/15'
      seconds: 0
  condition:
    - condition: time
      after: '22:30'
      weekday:
        - tue
        - thu
        - sun
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr("automation.start_vacuuming", "last_triggered") | default(0)) | int > 36000)}}'
    - condition: state
      entity_id: media_player.panasonic_viera_tv
      state: 'off'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr("media_player.panasonic_viera_tv","last_updated") | default(0)) | int > 120)}}'
    - condition: state
      entity_id: group.pirs
      state: 'off'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr("group.pirs","last_updated") | default(0)) | int > 120)}}'
    - condition: state
      entity_id: input_boolean.normal
      state: "on"
  action:
    - service: vacuum.start
      data:
        entity_id: vacuum.mi_robot_vacuum



- alias: Started Vacuuming
  initial_state: true
  trigger:
    - platform: state
      entity_id: vacuum.mi_robot_vacuum
      to: 'cleaning'
      from: 'docked'
    - platform: state
      entity_id: vacuum.mi_robot_vacuum
      to: 'cleaning'
      from: 'idle'
  action:
    - service: notify.gmaillolo
      data_template:
        message: 'Mi Robot Started Vacuuming...'
    - service: notify.gmaildiv
      data_template:
        message: 'Mi Robot Started Vacuuming...'



- alias: Vacuuming Error - continue
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.xiaomi_status
      to: 'Status: Error'
  condition:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr("automation.vacuuming_error_-_stop", "last_triggered") | default(0)) | int > 1800)}}'
  action:
    - service: vacuum.start
      data:
        entity_id: vacuum.mi_robot_vacuum



- alias: Vacuuming Error - stop
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.xiaomi_status
      to: 'Status: Error'
  condition:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr("automation.vacuuming_error_-_continue", "last_triggered") | default(0)) | int < 1800)}}'
  action:
    - service: tts.google_say
      entity_id: media_player.google_home_minis
      data:
        message: 'Looks like something is wrong with the Vacuum...'
    - service: notify.gmaillolo
      data:
        message: 'Looks like something is wrong with the Vacuum...'
        data:
          images:
            - /config/www/navmap.png


- alias: Finished Vacuuming
  initial_state: true
  trigger:
    - platform: state
      entity_id: vacuum.mi_robot_vacuum
      to: 'returning to dock'
    - platform: state
      entity_id: vacuum.mi_robot_vacuum
      to: 'returning'
  action:
    - service: notify.gmaillolo
      data_template:
        message: |
          Mi Robot finished Vacuuming...
          Cleaned {{ state_attr("vacuum.mi_robot_vacuum","cleaned_area") }} m² in {{ state_attr("vacuum.mi_robot_vacuum","cleaning_time") }} min.
        data:
          images:
            - /config/www/navmap.png
    - service: notify.gmaildiv
      data_template:
        message: |
          Mi Robot finished Vacuuming...
          Cleaned {{ state_attr("vacuum.mi_robot_vacuum","cleaned_area") }} m² in {{ state_attr("vacuum.mi_robot_vacuum","cleaning_time") }} min.
        data:
          images:
            - /config/www/navmap.png
    - service: input_boolean.turn_off
      entity_id: input_boolean.vacuum

- alias: Scheduled Vacuuming
  initial_state: true
  trigger:
    - platform: state
      entity_id: person.laurent
      from: "home"
    - platform: state
      entity_id: person.div
      from: "home"
  condition:
    - condition: state
      entity_id: input_boolean.normal
      state: "on"
    - condition: template
      value_template: '{{ states("person.laurent") != "home"}}'
    - condition: template
      value_template: '{{ states("person.div") != "home"}}'
    - condition: state
      entity_id: input_boolean.scheduled_vacuuming
      state: "on"
  action:
    - service: vacuum.start
      data:
        entity_id: vacuum.mi_robot_vacuum
    - service: input_boolean.turn_off
      entity_id: input_boolean.scheduled_vacuuming