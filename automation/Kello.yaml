- alias: Set Kello Volume
  trigger:
    - platform: state
      entity_id: input_number.volume_kello
  action:
  - service: shell_command.kello_volume



- alias: Mute Kello Alarms
  trigger:
    - platform: state
      entity_id: input_boolean.kello_mute_alarns
      to: 'on'
  action:
  - service: shell_command.kello_mute_alarms



- alias: Mute Kello Alarms auto
  trigger:
    - platform: state
      entity_id: device_tracker.zevsmpjl_lolo_iphone
      from: 'home'
    - platform: state
      entity_id: input_boolean.holidays
      to: 'on'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.kello_mute_alarns
  - service: shell_command.kello_mute_alarms



- alias: Unmute Kello Alarms
  trigger:
    - platform: state
      entity_id: input_boolean.kello_mute_alarns
      to: 'off'
  action:
  - service: shell_command.kello_unmute_alarms


# - alias: Unmute Kello Alarms Timed
  # trigger:
    # - platform: time
      # hours: 4
      # minutes: 0
      # seconds: 0
  # condition:
    # - condition: state
      # entity_id: input_boolean.holidays
      # state: 'off'
  # action:
  # - service: shell_command.kello_unmute_alarms


- alias: Unmute Kello Alarms auto
  trigger:
    - platform: state
      entity_id: device_tracker.zevsmpjl_lolo_iphone
      to: 'home'
    - platform: state
      entity_id: input_boolean.holidays
      to: 'off'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.kello_mute_alarns
  - service: shell_command.kello_unmute_alarms


- alias: Stop Radio on Kello
  trigger:
    - platform: state
      entity_id: input_boolean.kello_play_stop
      to: 'off'
  action:
  - service: shell_command.kello_stop_radio



- alias: Play Radio on Kello
  trigger:
    - platform: state
      entity_id: input_boolean.kello_play_stop
      to: 'on'
    - platform: state
      entity_id: input_select.kello_radio_station
  action:
  - service: shell_command.kello_volume
  - service: shell_command.kello_play_radio
    data_template:
      station_url: >
        {% if is_state("input_select.kello_radio_station", "RTL2") %} RTL2
        {% elif is_state("input_select.kello_radio_station", "Absolute Radio") %} AbsoluteRadio
        {% elif is_state("input_select.kello_radio_station", "Hit West") %} HitWest
        {% elif is_state("input_select.kello_radio_station", "Chill") %} Chill
        {% elif is_state("input_select.kello_radio_station", "Weather Forecast") %} WeatherForecast
        {% endif %}
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.kello_play_stop



- alias: Build Weather Greeting
  trigger:
    - platform: state
      entity_id: sensor.Kello_MQTT
      to: 'build_greeting'
  action:
  - service: tts.google_say
    data_template:
      entity_id: media_player.mpd_rpi_zero_w
      message: |
        {{["Good morning.","Hello.","Greetings.","Hi."] | random}}
        It's currently {{states.sensor.dark_sky_summary.state}} and {{states.sensor.dark_sky_temperature.state|round}} degrees.
        Today will be {{states.sensor.dark_sky_hourly_summary.state|replace(".", "")}},
        highs: {{states.sensor.dark_sky_daily_high_temperature.state|round}},
        lows: {{states.sensor.dark_sky_daily_low_temperature.state|round}}.
        Winds {{states.sensor.pws_wind_dir.state
        |replace("N","North ")
        |replace("S","South ")
        |replace("E","East ")
        |replace("W","West ")
        }} at {{states.sensor.pws_wind_1d_kph.state}} to {{states.sensor.pws_wind_gust_1d_kph.state}} km/h.
        Chance of rain: {{states.sensor.pws_precip_1d.state | int(0)}}%.
        {% if now().strftime("%a") == 'Tue' or now().strftime("%a") == 'Wed' or now().strftime("%a") == 'Thu' %}Estimated travel time to Waybridge: {{states.sensor.home_to_verint.state}} minutes.{% endif %}
        {% if now().strftime("%a") == 'Mon' or now().strftime("%a") == 'Wed' or now().strftime("%a") == 'Fri' %} Remember to empty the vacuum.{% endif %}
        {% if as_timestamp(now()) | timestamp_custom('%Y-%m-%d') == (states.calendar.birthdays__events.attributes.start_time).split(" ")[0] and states.calendar.birthdays__events.attributes.all_day != True %} Your next appointment is: {{states.calendar.birthdays__events.attributes.message}} at {{(states.calendar.birthdays__events.attributes.start_time).split(" ")[1].split(":")[0]}} {%if (states.calendar.birthdays__events.attributes.start_time).split(" ")[1].split(":")[1] != '00'%}{{(states.calendar.birthdays__events.attributes.start_time).split(" ")[1].split(":")[1]}} {%endif%} {%endif%}
        {% if as_timestamp(now()) | timestamp_custom('%Y-%m-%d') == (states.calendar.birthdays__events.attributes.start_time).split(" ")[0] and states.calendar.birthdays__events.attributes.all_day == True %} Today is : {{states.calendar.birthdays__events.attributes.message|replace("/","and")}}{%endif%}
      cache: true



- alias: Play Weather Greeting
  trigger:
    - platform: state
      entity_id: sensor.Kello_MQTT
      to: 'play_greeting'
  action:
  - service: shell_command.weather_on_kello_play



# - alias: Reboot Kello at Midnight
  # trigger:
    # - platform: time
      # hours: 0
      # minutes: 0
      # seconds: 0
  # condition:
    # - condition: state
      # entity_id: input_boolean.holidays
      # state: 'off'
  # action:
  # - service: switch.turn_off
    # data:
      # entity_id: switch.LWRF_Socket_3
  # - delay: 00:00:05
  # - service: switch.turn_on
    # data:
      # entity_id: switch.LWRF_Socket_3